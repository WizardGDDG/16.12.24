#include <iostream>
#include <algorithm> 


void mergeSortedArrays(int *A, int n, int *B, int m, int *C) 
{
    int *ptrA = A;  
    int *ptrB = B;  
    int *ptrC = C;  

    
    while (ptrA < A + n && ptrB < B + m) 
    {
        if (*ptrA <= *ptrB) 
        {
            *ptrC = *ptrA;
            ptrA++;
        } else {
            *ptrC = *ptrB;
            ptrB++;
        }
        ptrC++;
    }

    
    while (ptrA < A + n) 
    {
        *ptrC = *ptrA;
        ptrA++;
        ptrC++;
    }

    
    while (ptrB < B + m) 
    {
        *ptrC = *ptrB;
        ptrB++;
        ptrC++;
    }
}

int main() {
    int A[] = {2, 4, 6, 8};
    int n = sizeof(A) / sizeof(A[0]);

    int B[] = {1, 3, 5, 7, 9};
    int m = sizeof(B) / sizeof(B[0]);

    int C[n + m]; 

    mergeSortedArrays(A, n, B, m, C);

    std::cout << "Массив C (объединенный и отсортированный): ";
    for (int i = 0; i < n + m; ++i) 
    {
        std::cout << C[i] << " ";
    }
    std::cout << std::endl;

    return 0;
}
